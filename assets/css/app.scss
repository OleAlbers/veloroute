$minWidth: 330px;
$mainWidth: 66.6666vw;
$sidebarWidth: 33.3333vw;
$bgcolor: #f8f8f8;
$darkBg: #333;
$red: #e30513;
$darkBgHighlight: #666;
$contentPad: 0.9rem;

* {
  margin: 0;
  padding: 0;
  text-decoration: none;
  touch-action: manipulation;
}

html,
body>div {
  overflow: hidden;
}

body {
  height: 100vh;
  height: -webkit-fill-available;
  background: #333;
  font-family: Arial, sans;
  font-size: 0.9em;

  &.loading::before {
    color: white;
    content: 'âŒ›'; // hourglass
    display: block;
    font-weight: bold;
    right: 0;
    padding: 0.3rem 0.5rem;
    position: absolute;
    text-shadow: -0.05em 0.05em 0 rgba(0, 0, 0, 0.2), 0.05em 0.05em 0 rgba(0, 0, 0, 0.2), 0.05em -0.05em 0 rgba(0, 0, 0, 0.2), -0.05em -0.05em 0 rgba(0, 0, 0, 0.2);
    top: 0;
    z-index: 1;
    font-size: 2em;
  }
}


#map,
#fakeMap,
#videoOuter {
  width: $mainWidth;
  min-width: $minWidth;
  height: 50%;
  display: block;
  left: 0;
  position: fixed;
}

#map {
  top: 0;
  z-index: 1;
  overflow: hidden;
  background-color: #E6E4E0;
}

#fakeMap {
  z-index: 2;
  top: 0;
  overflow: hidden;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  opacity: 0.5;
  transition: opacity 0.2s;
  pointer-events: none;
}

#videoOuter {
  top: 50%;
  overflow: hidden;
  background: #333 url('/images/video_poster.svg') 50% 50% / contain no-repeat;
}

#videoPoster {
  width: 100%;
  height: 100%;
  background: url('') 50% 50% / cover no-repeat;
}

body.fullscreen #videoOuter {
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    height: -webkit-fill-available;
    position: fixed;
    z-index: 11;
  }

body.fullscreen #videoPoster, #videoOuter:fullscreen #videoPoster {
  background-size: contain;
}

#videoOuter:hover #videoControls, #videoControls[data-state="play"] {
  opacity: 1;
}

$videoBarHeight: 2.6rem;
$videoBarBtnMargin: 0.3rem;
$videoBarProgressHeight: 0.4rem;
#videoControls {
  opacity: 0;
  transition: opacity 0.2s ease-in-out;

  height: $videoBarHeight;
  left: 0;
  bottom: 0;
  position: absolute;

  width: 100%;
  // min-width: $minWidth;
  background: rgba(0, 0, 0, 0.6);
  z-index: 12;

  display: flex;

  button {
    border: 0;

    height: $videoBarHeight - 2*$videoBarBtnMargin;
    width: $videoBarHeight - 2*$videoBarBtnMargin;
    margin: $videoBarBtnMargin;
    overflow: hidden;
    float: left;
    color: #fff;
    background: transparent;
    font-weight: bold;
    font-size: 1.2rem;
    line-height: $videoBarHeight - 2*$videoBarBtnMargin;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    position: relative;

    &.disabled {
      cursor: default;

      &::before {
        position: absolute;
        content: "";
        left: $videoBarBtnMargin;
        top: 50%;
        right: 0;
        border-top: 2px solid;
        border-color: $red;
        width: 1.5rem;

        -webkit-transform:rotate(-45deg);
        -moz-transform:rotate(-45deg);
        -ms-transform:rotate(-45deg);
        -o-transform:rotate(-45deg);
        transform:rotate(-45deg);
      }
    }

    &:not(.disabled):hover {
      color: $red;
      // via https://codepen.io/sosuke/pen/Pjoqqp
      filter: brightness(0) saturate(100%) invert(17%) sepia(99%) saturate(6592%) hue-rotate(352deg) brightness(87%) contrast(105%);
    }
  }

  #playpause {
    background: url("/images/play.svg") no-repeat center center;
    background-size: $videoBarHeight / 3;
  }

  &[data-state="pause"] #playpause {
    background: url("/images/pause.svg") no-repeat center center;
    background-size: $videoBarHeight / 4;
  }

  #fullscreen {
    background: url("/images/fullscreen.svg") no-repeat center center;
    background-size: $videoBarHeight / 2.7;
  }

  #reverse {
    background: url("/images/reverse.svg") no-repeat center center;
    background-size: $videoBarHeight / 2.7;
  }

  #duration {
    height: $videoBarHeight - 2*$videoBarBtnMargin;
    line-height: $videoBarHeight - 2*$videoBarBtnMargin;
    text-align: center;
    color: #888;
    margin: $videoBarBtnMargin;

    #current {
      color: #fff;
    }
  }

  #progressWrapper {
    display: block;
    float: left;
    flex: 2;
    height: $videoBarHeight - 4*$videoBarBtnMargin;
    margin: 2*$videoBarBtnMargin $videoBarBtnMargin;
    cursor: pointer;
  }

  progress {
    width: 100%;
    height: $videoBarProgressHeight;
    border: none;
    margin: ($videoBarHeight - 4*$videoBarBtnMargin - $videoBarProgressHeight)/2 0;
    color: $red;
    border-radius: $videoBarProgressHeight;
    background: #000;
    background: linear-gradient(90deg, #444 var(--loaded, 0%), #000 var(--loaded, 0%));

    &::-webkit-progress-bar {
      background: linear-gradient(90deg, #444 var(--loaded, 0%), #000 var(--loaded, 0%));
      border-radius: $videoBarProgressHeight;
    }

    &::-moz-progress-bar {
      border-radius: $videoBarProgressHeight;
      background-color: $red;
    }
    &::-webkit-progress-value {
      border-radius: $videoBarProgressHeight;
      background-color: $red;
    }
  }
}

#sidebar {
  width: $sidebarWidth;
  min-width: $minWidth;
  height: 100vh;
  height: -webkit-fill-available;
  position: relative;
  top: 0;
  left: $minWidth; // old browsers doesn't support max() -- for mobile devices
  left: unquote('max(#{$minWidth}, #{$mainWidth})');
  background: $bgcolor;
  display: flex;
  flex-flow: column;
  z-index: 3;
}

@media (min-width: 3*$minWidth) {
  #sidebar {
    left: $mainWidth; // old browsers doesn't support max() -- for desktop
    left: unquote('max(#{$minWidth}, #{$mainWidth})');
    position: fixed;
  }

  #switcher {
    display: none !important;
  }
}

.showSidebar #sidebar {
  transition: all 0.3s ease;
  left: calc(100vw - #{$minWidth}); // old browsers doesn't support max() -- for both
  left: unquote('min(100vw - #{$minWidth}, #{$mainWidth})');
}

.hideSidebar #sidebar {
  transition: all 0.3s ease;
}

#content {
  padding: $contentPad;
  padding-top: 0;
  min-width: $minWidth;
  box-sizing: border-box;
  width: 100%;
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;

  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;

  &.bottomBumper {
    margin-bottom: 2.5rem;
  }
}

@keyframes spinner {
  0% {
    transform: rotate(-180deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

$cyclistSize: 8rem;
#videoPoster {
  &::after, &::before {
    transition-property: opacity;
    transition-duration: 0.5s;
    transition-timing-function: ease-in;
    opacity: 0;
    content: "";
    position: absolute;
  }

  &::before {
    background: url('/images/cyclist.svg') 100% 100% / contain no-repeat;
    height: $cyclistSize;
    top:  unquote('calc(50% - #{$cyclistSize/2})');
    left: unquote('calc(50% - #{$cyclistSize/2})');
    width: $cyclistSize;
  }

  &::after {
    animation: 2.0s ease-in-out infinite spinner;
    animation-play-state: inherit;
    border: solid $cyclistSize/20 transparent;
    border-bottom-color: $red;
    border-radius: 50%;
    height: $cyclistSize/3.55;
    top: unquote('calc(50% - #{$cyclistSize/30.5})');
    left: unquote('calc(50% - #{$cyclistSize/2.19})');
    width: $cyclistSize/3.55;
    will-change: transform;
  }

  &.loading {
    &::after, &::before {
      opacity: 1;
    }
  }
}

video {
  width: 100%;
  height: 100%;
  object-fit: cover;


}

body.fullscreen video, #videoOuter:fullscreen video {
  object-fit: contain;
}

#slideshow {
  $btnSize: 2.5rem;

  position: absolute;
  bottom: 0;
  right: 0;

  width: 100%;
  min-width: $minWidth;
  box-sizing: border-box;

  padding: 0 $contentPad;
  color: #fff;
  height: $btnSize;
  background: $darkBg;
  white-space: nowrap;
  overflow: hidden;
  display: flex;
  touch-action: pan-x;

  box-shadow: 0 0 3px 0px rgba(0, 0, 0, 0.4);

  .curRoute {
    height: $btnSize;
    line-height: $btnSize;
    flex-grow: 1;
    text-overflow: ellipsis;
    overflow: hidden;
    text-align: right;
    color: #fff;
    text-decoration: none;
  }
}

#switcher {
  $width: 26px;
  $height: 68px;

  position: absolute;
  position: sticky;
  top: calc(50vh - #{$height/2});
  left: 0;
  height: 0;
  overflow: visible;
  touch-action: pan-x;

  div {
    margin-left: #{$width/-2};
    width: 0;
    height: 0;
    user-select: none;
    background-image: url("/images/switcher.svg");
    background-repeat: no-repeat;
    background-position: center center;
    width: $width;
    height: $height;
    touch-action: pan-x;
    background-size: cover;
  }
}

a.header {
  color: #fff;
  line-height: 2em;
  display: block;
  background: $darkBg;
  text-align: center;
  font-weight: bold;
  font-size: 1.6em;
  text-decoration: none !important;
}

$iconSize: 1.5em;
$iconBorder: 0.13em;
.icon {
  height: $iconSize;
  display: inline-block;
  line-height: $iconSize;
  margin-top: -0.35em;
  margin-bottom: -0.15em;
  font-size: 90%;
  font-weight: normal;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  color: #fff !important;
  cursor: default;
  border: $iconBorder solid white;
  text-shadow: -0.05em 0.05em 0 rgba(0, 0, 0, 0.2),
    0.05em 0.05em 0 rgba(0, 0, 0, 0.2), 0.05em -0.05em 0 rgba(0, 0, 0, 0.2),
    -0.05em -0.05em 0 rgba(0, 0, 0, 0.2);

  &.freizeit {
    border-radius: 0.2rem;
    padding: 0 0.2rem;
  }

  &.alltag {
    border-radius: 50%;
    width: 1.5em;
  }

  &.rsw {
    display: none;
  }
}

h3 .icon {
  outline: 1px solid #eee;
  float: right;
  margin-top: -0.2rem;
  pointer-events: none;
  cursor: normal;
}

.icon, .fricon {
  color: #fff !important;
  cursor: default;
  border: 0.13em solid white;
  text-shadow: -0.05em 0.05em 0 rgba(0, 0, 0, 0.2),
    0.05em 0.05em 0 rgba(0, 0, 0, 0.2), 0.05em -0.05em 0 rgba(0, 0, 0, 0.2),
    -0.05em -0.05em 0 rgba(0, 0, 0, 0.2);
}


a.icon {
  cursor: pointer;

  &:hover {
    text-decoration: none;
    font-weight: bold;
  }
}

abbr {
  cursor: help;
  text-decoration: underline dotted;
}


h3,
h4 {
  margin-top: 1em;
}

h3 {
  font-size: 1.1rem;
}

h4 {
  font-size: 1.0rem;
}

h5 {
  margin-top: 0.5em;
  font-size: 0.9rem;
  font-weight: normal;
  font-style: italic;
}

h3:first-child + .duration {
  color: #888;
  font-style: italic;
  display: block;
  margin-top: 0.4em;
}

time.updated {
  color: #888;
  text-align: right;
  font-style: italic;
  display: block;
}

span.updated {
  color: #888;
  font-style: italic;
  display: block;
  padding-top: 0.1rem;
}

ul,
ol {
  padding-left: 0.85rem;
  line-height: 120%;
  margin-top: 0.6rem;

  li {
    margin-bottom: 0.4rem;
  }

  .duration {
    color: #999;
    float: right;
    padding-left: .5em;
  }
}

ol.route-list {
  list-style-type: none;
  padding: 0;
  columns: 2;
  column-gap: 0.5rem;

  li {
    margin: 0;
    margin-bottom: 0.5rem;
    clear: all;
    break-inside: avoid-column;
  }

  a:hover {
    span {
      text-decoration: inherit;
      &.icon {
        text-decoration: none;
      }
    }
  }

  span {
    display: inline-block;
    vertical-align: middle;
  }

  span.freizeit {
    width: 2.5em;
  }

  span.freizeit + span {
    width: calc(100% - 3.3em);
  }

  span.alltag + span {
    width: unquote('calc(100% - #{$iconSize + 2*$iconBorder + 0.2em})');
  }

  span + span {
    margin-left: 0.3em;
  }

  .icon {
    cursor: pointer;
    text-decoration: none !important;
    margin-top: -0.16em;
  }
}


li.separator {
  margin-top: 1rem;
  font-weight: bold;
  list-style-type: '';
  margin-left: -0.85rem;

  &:first-child {
    display: none;
  }
}


ol.hide-bullets {
  list-style-type: none;
  padding: 0;

  time {
    width: 4em;
    display: inline-block;
  }

  a {
    width: calc(100% - 4.5em);
    display: inline-block;
    float: right;
  }

  li.separator {
    margin-left: 0;
  }

  li {
    clear: both;
  }

  &:after {
    content: ".";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }
}

p {
  text-align: justify;
  margin-top: 0.6rem;
}

h5 + p {
  margin-top: 0.25rem;
}

a {
  color: #0366d6;
  text-decoration: none;
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }

  &.ref {
    text-decoration-style: dotted;
    cursor: help;
  }
}

#impressum {
  margin-top: 2em;
  float: right;

  a {
    color: #888;
  }
}

#indicator,
#indicator-rotate {
  height: 2em;
  width: 2em;
  pointer-events: none;

  &.animate {
    // NOTE: also update timeout in map.js
    transition: linear 0.3s;
  }
}

#ping-indicator {
  background: #f47474;
  border-radius: 100%;
  width: 1em;
  height: 1em;
  border: 0.2em solid #fff;
  outline: 0.1em solid #000000a1;
  pointer-events: none;
  transition-property: opacity;
  transition-duration: 3s;
  transition-timing-function: ease-in;
  margin-left: 0.5em;
  margin-top: 0.5em;
}

#indicator-loc {
  background: rgba(255, 255, 255, 0.5);
  border-radius: 0.8em;
  border: 0.2em solid #000;
  box-shadow: 0 0 0.1em 0.1em #fff;
  height: 0.8em;
  left: 50%;
  position: absolute;
  color: #000;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.8em;
}

#indicator-dir {
  &::before {
    content: 'â–´';
    font-size: 1.3em; // adjust translateY below as needed
  }

  height: 2em;
  left: 50%;
  position: relative;
  top: 0%;
  text-align: center;
  text-shadow: 0.1em 0.0em 0.1em #fff,
  0.1em -0.1em 0.1em #fff,
  -0.1em 0.0em 0.1em #fff,
  -0.1em -0.1em 0.1em #fff;
  transform: translate(-50%, -45%);
  width: 2em;
  z-index: 10;
}

span[title],
#slideshow .curRoute {
  cursor: help;
  border-bottom: 0.05em dotted #000;
}

#slideshow .curRoute .icon {
  cursor: help;
}


p.alert {
  background: #ECD0D0;
  padding: $contentPad;
  margin: 0 #{-1*$contentPad};
}

table.routing {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  width: calc(100% + 2*#{$contentPad});
  margin-left: -$contentPad;


  a {
    color: #000;
  }

  tr,
  td,
  th {
    padding: 0;
  }

  // this will control the size of the abstract route rendering, since it needs
  // to match in cell height for the different sub-icons to line up.
  $table-cell-height: 20px;

  td {
    height: $table-cell-height;
    white-space: nowrap;
  }

  $main-route-icon-size: 1.5em;

  // i.e. center column that displays the route
  tr:first-child td:nth-child(2) {
    // image will be set through HTML
    background-position: center bottom;
    background-repeat: no-repeat;
    background-size: auto calc(100% - #{$main-route-icon-size});
    width: 1.25*2*$table-cell-height;
    vertical-align: top;
    text-align: center;
    padding-top: 0.42em;

    .icon {
      font-size: 120%;
      width: $main-route-icon-size;
      height: $main-route-icon-size;
    }
  }

  td:first-child {
    text-align: right;
  }

  td.dir {
    opacity: 0.3;
  }

  .icon {
    margin: 0 0.2em;
  }
}

input[type=search] {
  margin-top: 0.6rem;
  box-sizing: border-box;
  width: 100%;
  padding: 0.5rem;
  border-radius: 0.2rem;
  border: 1px solid #cdc7c2;
  outline: 0;
  font-size: 16px;

  &:focus {
    border: 1px solid #3584e4;
    box-shadow: 0 0 0 1px #3584e4;
  }
}

@media (min-width: 3*$minWidth) {
  input[type=search] {
    font-size: inherit;
  }
}

div.aside {
  color: #888;
  font-style: italic;
  display: block;
}

@import "mapbox.css"
